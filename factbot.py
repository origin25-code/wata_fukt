import os
import requests
import openai
from dotenv import load_dotenv

load_dotenv()

OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
TELEGRAM_CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")
DEBUG_CHAT_ID = os.getenv("DEBUG_CHAT_ID")

openai.api_key = OPENAI_API_KEY

def send_to_telegram(message: str, debug=False):
    chat_id = DEBUG_CHAT_ID if debug else TELEGRAM_CHAT_ID
    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
    payload = {
        "chat_id": chat_id,
        "text": message,
        "parse_mode": "Markdown",
    }
    try:
        response = requests.post(url, json=payload, timeout=10)
        response.raise_for_status()
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram:", e)

def main():
    print("üìÇ –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª prompt...")
    try:
        with open("fact_prompt.txt", "r", encoding="utf-8") as f:
            prompt = f.read()
    except FileNotFoundError:
        send_to_telegram("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª `fact_prompt.txt`", debug=True)
        return

    print("üì• –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ OpenAI...")
    try:
        response = openai.ChatCompletion.create(
            model="gpt-4o",
            messages=[{"role": "user", "content": prompt}],
            temperature=1,
            max_tokens=100,
            timeout=30
        )
    except Exception as e:
        send_to_telegram(f"‚ùå –û—à–∏–±–∫–∞ OpenAI:\n{e}", debug=True)
        return

    try:
        fact = response["choices"][0]["message"]["content"].strip()
        print("‚úÖ –ü–æ–ª—É—á–µ–Ω —Ñ–∞–∫—Ç:", fact)
        send_to_telegram(fact)
    except Exception as e:
        send_to_telegram(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–∞:\n{e}", debug=True)

if __name__ == "__main__":
    main()
